// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250320061556_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Intern", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsMale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_male");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<Guid?>("ProbationCourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("probation_course_id");

                    b.Property<Guid?>("ProbationProjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("probation_project_id");

                    b.HasKey("Id")
                        .HasName("pk_interns");

                    b.HasIndex("ProbationCourseId")
                        .HasDatabaseName("ix_interns_probation_course_id");

                    b.HasIndex("ProbationProjectId")
                        .HasDatabaseName("ix_interns_probation_project_id");

                    b.ToTable("interns", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ProbationCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_probation_courses");

                    b.ToTable("probation_courses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ProbationProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_probation_projects");

                    b.ToTable("probation_projects", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Intern", b =>
                {
                    b.HasOne("Domain.Entities.ProbationCourse", "ProbationCourse")
                        .WithMany("Interns")
                        .HasForeignKey("ProbationCourseId")
                        .HasConstraintName("fk_interns_probation_courses_probation_course_id");

                    b.HasOne("Domain.Entities.ProbationProject", "ProbationProject")
                        .WithMany("Interns")
                        .HasForeignKey("ProbationProjectId")
                        .HasConstraintName("fk_interns_probation_projects_probation_project_id");

                    b.Navigation("ProbationCourse");

                    b.Navigation("ProbationProject");
                });

            modelBuilder.Entity("Domain.Entities.ProbationCourse", b =>
                {
                    b.Navigation("Interns");
                });

            modelBuilder.Entity("Domain.Entities.ProbationProject", b =>
                {
                    b.Navigation("Interns");
                });
#pragma warning restore 612, 618
        }
    }
}
